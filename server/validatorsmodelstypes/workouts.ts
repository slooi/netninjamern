import mongoose from "mongoose";
import z from "zod";

//#################################################################################################
//							ZOD
//#################################################################################################
// Zod Schema
export const ZodSchemaWorkout = z.object({
	title: z.string(),
	reps: z.number(),
	load: z.number()
}).strict()


//#################################################################################################
//							TYPES
//#################################################################################################
// Type
export type Workout = z.infer<typeof ZodSchemaWorkout>


//#################################################################################################
//							MONGOOSE
//#################################################################################################
// Mongoose Schema
const SchemaWorkout = new mongoose.Schema<Workout>({
	title: {
		type: String,
		required: true
	},
	reps: {
		type: Number,
		required: true
	},
	load: {
		type: Number,
		required: true
	}
}, { timestamps: true, strict: "throw" })



//#####################################################################################################
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//									INFERRED SECTION STARTS 
//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
//#####################################################################################################

//#################################################################################################
//								ZOD INFERRED
//#################################################################################################

const ZodAdditionalMongooseTypes = z.object({
	createdAt: z.string(), // Assuming createdAt is a string (e.g., ISO date)
	updatedAt: z.string(),
	_id: z.string(),
	__v: z.number(),
});


export const ZodSchemaWorkoutMongoose = ZodSchemaWorkout.merge(ZodAdditionalMongooseTypes)

//#################################################################################################
//							TYPES INFERRED
//#################################################################################################

export type M_Workout = z.infer<typeof ZodSchemaWorkoutMongoose>

//#################################################################################################
//							EXPORTS
//#################################################################################################
// Model
export const ModelWorkouts = mongoose.model("workouts", SchemaWorkout)